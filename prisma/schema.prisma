// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum SyncStatus {
  NOT_SYNCED
  SYNCING
  SYNCED
}

enum ExchangeName {
  COINBASEPRO
  BITSTAMP
  KRAKEN
}

enum OrderType {
  LIMIT
  MARKET
}

model Exchange {
  id           Int           @id @default(autoincrement())
  name         ExchangeName  @default(COINBASEPRO)
  apiKey       String        @unique
  apiSecret    String        @unique
  apiThird     String?       @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  lastSync     DateTime?
  syncStatus   SyncStatus    @default(NOT_SYNCED)
  user         User          @relation(fields: [userId], references: [id])
  userId       Int
  transactions Transaction[]
}

model PortfolioAsset {
  id           Int       @id @default(autoincrement())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  coin         String
  coinName     String
  amount       Float
  averagePrice Float
  portfolio    Portfolio @relation(fields: [portfolioId], references: [id])
  portfolioId  Int
}

model Portfolio {
  id              Int              @id @default(autoincrement())
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  lastSync        DateTime?
  syncStatus      SyncStatus       @default(NOT_SYNCED)
  user            User             @relation(fields: [userId], references: [id])
  userId          Int
  portfolioAssets PortfolioAsset[]
}

model Transaction {
  id            Int       @id @default(autoincrement())
  exchange      Exchange  @relation(fields: [exchangeId], references: [id])
  exchangeId    Int
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  openedAt      DateTime
  doneAt        DateTime
  coin          String
  coinName      String
  purchasePrice Float
  amount        Float
  fees          Float     @default(0)
  type          OrderType
  post          Boolean
  settled       Boolean
  filled        Boolean
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  name      String?
  password  String
  salt      String     @default("")
  exchanges Exchange[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  portfolio Portfolio?
}
